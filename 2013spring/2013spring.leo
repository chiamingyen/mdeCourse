<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo (http://webpages.charter.net/edreamleo/front.html) -->
<?xml-stylesheet ekr_test?>
<leo_file xmlns:leo="http://www.leo-editor.org/2011/leo" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="amd_yen.20130306001037.1797" a="E"><vh>@settings</vh>
<v t="amd_yen.20130306001037.1798"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="amd_yen.20130306001037.1799"><vh>@string initial_split_orientation = vertical</vh></v>
</v>
<v t="amd_yen.20130307204656.1443" a="E"><vh>課程規劃與進行</vh>
<v t="amd_yen.20130307204656.9867"><vh>@url Leo 手冊</vh></v>
</v>
<v t="amd_yen.20130308103121.2379"><vh>整體架構規劃</vh></v>
<v t="amd_yen.20130308210411.2383"><vh>自編教材 (點選下列節點, 按下 Ctrl+b 可以建立教材)</vh>
<v t="amd_yen.20130314194325.1514" a="E"><vh>@button generate-current</vh>
<v t="amd_yen.20130308210411.2404"><vh>&lt;&lt; html manual &gt;&gt;</vh></v>
<v t="amd_yen.20130308210411.2405"><vh>&lt;&lt; pdf manual &gt;&gt;</vh></v>
</v>
<v t="amd_yen.20130308210411.2403" a="E"><vh>@button generate-full-userguide</vh>
<v t="amd_yen.20130308210411.2404"></v>
<v t="amd_yen.20130308210411.2405"></v>
</v>
<v t="amd_yen.20130308210411.2397"><vh>@edit document\conf.py</vh></v>
<v t="amd_yen.20130308210411.2398"><vh>@edit document\kmol_toc.html.txt</vh></v>
<v t="amd_yen.20130318140025.2832" a="E"><vh>位於 exts 目錄的中文分詞程式</vh>
<v t="amd_yen.20130318140025.2829"><vh>@edit exts\zh.py</vh></v>
<v t="amd_yen.20130318140025.2830"><vh>@edit exts\chinese_search.py</vh></v>
<v t="amd_yen.20130318140025.2831"><vh>@edit exts\sphinx.search.py</vh></v>
</v>
</v>
<v t="amd_yen.20130312013510.1824"><vh>@button self_and_subtree</vh></v>
<v t="amd_yen.20130308210411.2406" a="E"><vh>KMOL Guide</vh>
<v t="amd_yen.20130308221230.3827" a="E"><vh>前言</vh>
<v t="amd_yen.20130312013510.1498"><vh>以下為電子書內容</vh></v>
<v t="amd_yen.20130308221230.3828"
expanded="amd_yen.20130308221230.3829,"><vh>@file frontMatter.txt</vh></v>
</v>
<v t="amd_yen.20130308210411.2384" a="E"><vh>程式語言(二)</vh>
<v t="amd_yen.20130318140025.2833"><vh>有關程式語言</vh></v>
<v t="amd_yen.20130308221230.2437"><vh>C2 第一週程式</vh>
<v t="amd_yen.20130308221230.2438" a="E"><vh>@shadow c2/grouping.py</vh></v>
<v t="amd_yen.20130308221230.2441" a="E"><vh>@shadow c2/generate_stud.py</vh></v>
</v>
<v t="amd_yen.20130308221230.2457"><vh>C2 第二週程式</vh>
<v t="amd_yen.20130308221230.2458" a="E"><vh>@shadow c2/docutils_ex1.py</vh></v>
<v t="amd_yen.20130308221230.2462"><vh>課程規劃</vh></v>
<v t="amd_yen.20130308221230.2463" a="E"><vh>課程進行</vh>
<v t="amd_yen.20130308221230.2464"><vh>portableKMOL 配置</vh></v>
</v>
<v t="amd_yen.20130308221230.2465" a="E"><vh>@shadow c2/docutils_ex2.py</vh></v>
</v>
<v t="amd_yen.20130317160119.1726"><vh>C2 第四週程式</vh>
<v t="amd_yen.20130317160119.1727"><vh>@shadow c2/pyqt_geardesign.py</vh></v>
</v>
<v t="amd_yen.20130312013510.1501"><vh>網誌內容</vh></v>
<v t="amd_yen.20130312013510.1498"></v>
<v t="amd_yen.20130308210411.2387" a="E"
expanded="amd_yen.20130308210411.2388,amd_yen.20130308214521.2437,amd_yen.20130308214521.2438,amd_yen.20130308214521.2440,amd_yen.20130309155804.1712,amd_yen.20130317094520.1538,"><vh>@file c2.txt</vh></v>
</v>
<v t="amd_yen.20130308210411.2385" a="E"><vh>協同產品設計實習</vh>
<v t="amd_yen.20130309155804.1706"><vh>CD 第三週程式</vh>
<v t="amd_yen.20130309155804.1707" a="E"><vh>@shadow cd/spreadsheet.py</vh></v>
</v>
<v t="amd_yen.20130314194325.1746"><vh>CD 第四週程式</vh>
<v t="amd_yen.20130314194325.1747" a="E"><vh>@shadow cd/gearcontour.py</vh></v>
</v>
<v t="amd_yen.20130312013510.1498"></v>
<v t="amd_yen.20130308210411.2392" a="E"
expanded="amd_yen.20130308210411.2393,amd_yen.20130308214521.2427,amd_yen.20130309155804.1709,amd_yen.20130310161901.1489,amd_yen.20130314194325.1511,amd_yen.20130309155804.1711,amd_yen.20130320201815.1570,"><vh>@file cd.txt</vh></v>
</v>
<v t="amd_yen.20130308210411.2386" a="E"><vh>網際內容管理</vh>
<v t="amd_yen.20130312013510.1498"></v>
<v t="amd_yen.20130308210411.2407" a="E"
expanded="amd_yen.20130308210411.2408,"><vh>@file wcm.txt</vh></v>
</v>
<v t="amd_yen.20130308221230.2492" a="E"><vh>綜合資料</vh>
<v t="amd_yen.20130312013510.1498"></v>
<v t="amd_yen.20130308221230.2493" a="E"
expanded="amd_yen.20130308221230.2494,amd_yen.20130308221230.2481,amd_yen.20130312013510.2093,amd_yen.20130308221230.2482,amd_yen.20130308221230.2485,amd_yen.20130311141127.1492,amd_yen.20130309155804.1713,amd_yen.20130322213429.1578,amd_yen.20130321213622.1575,"><vh>@file misc.txt</vh></v>
</v>
</v>
<v t="amd_yen.20130325133433.2805"><vh>C2G1</vh>
<v t="amd_yen.20130325133433.2806" a="E"><vh>按鈕</vh>
<v t="amd_yen.20130325133433.2807" a="E"><vh>@button c2g1</vh>
<v t="amd_yen.20130325133433.2808"><vh>&lt;&lt; html manual &gt;&gt;</vh></v>
<v t="amd_yen.20130325133433.2809"><vh>&lt;&lt; pdf manual &gt;&gt;</vh></v>
</v>
</v>
<v t="amd_yen.20130325133433.2810" a="E"><vh>設定檔案</vh>
<v t="amd_yen.20130325133433.2811" a="E"><vh>@path c2g1</vh>
<v t="amd_yen.20130325133433.2812"><vh>@edit conf.py</vh></v>
<v t="amd_yen.20130325133433.2813"><vh>@edit index.html.txt</vh></v>
<v t="amd_yen.20130325133433.2814"><vh>@edit make.bat</vh></v>
</v>
</v>
<v t="amd_yen.20130325133433.2815" a="E"><vh>Latex 後續處理(選項)</vh>
<v t="amd_yen.20130325133433.2816" a="O"><vh>@edit c2g1/_build/latex/index.tex</vh></v>
<v t="amd_yen.20130325133433.2817"><vh>@button latex pdf</vh></v>
</v>
<v t="amd_yen.20130325133433.2818" a="E"><vh>c2g1 report</vh>
<v t="amd_yen.20130325133433.2819" a="E"><vh>選項設定</vh>
<v t="amd_yen.20130325133433.2820" a="E"><vh>@rst c2g1/frontmatter.html</vh>
<v t="amd_yen.20130325133433.2821"><vh>前言</vh></v>
<v t="amd_yen.20130325133433.2822"><vh>動機</vh></v>
</v>
</v>
</v>
<v t="amd_yen.20130325133433.2823"><vh>@auto c2g1/fromoutside.html.txt</vh></v>
</v>
</vnodes>
<tnodes>
<t tx="amd_yen.20130306001037.1797"></t>
<t tx="amd_yen.20130306001037.1798">QSplitter::handle {
    background-color: #CAE1FF; /* lightSteelBlue1 */
}

QStackedWidget {
    /* background-color:lightpink; */
    border-color: red;
    padding: 0px;
    /* border-width: 0px; */
    /* background-color: yellow; */
}

QSplitter {
    border-color: white;
    background-color: white;
    border-style: solid;
}

QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 18px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 17px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 17px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 18px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 17px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 17px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="amd_yen.20130306001037.1799">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="amd_yen.20130307204656.1443">希望能夠比照 Leo Doc 的方式建構, 將每一週的上課內容進行註記, 然後使用者可以利用 Sphinx 與 LaTeX 將內容轉換成 html 與 pdf  檔案格式.

編寫方式採用 @file 與 @rst

希望參考

V:\misc\leo-editor-snapshot-20130223\leo\leoeditor_doc\LeoDocs.leo#Startup

註: 左手按住 Ctrl, 然後右手點選下一個子書籤就會帶出 Leo 的手冊 (假如是在 misc 目錄下工作時), 並且逐步將該內容中產生 html 與 pdf 的架構, 複製到課程相關的資料編輯模式中.

基本資料更新的流程如下:

1. 由網路上下載 portablKMOL, 並且啟動, 系統會自動開啟 Leo Editor 以及其他網際相關伺服器.

(需要有 portableGit, 至於其他相關工具與模組則可最佳化到最小容量, 額外的模組則依照需求再由網路中下載, 以附加的模式增加可攜系統的功能)

2. 以 git clone https://github.com/chiamingyen/mdeCourse.git

在電腦中的某一目錄中, 複製 gihub 有關 mdeCourse 的最新版本.

3. 利用 portablKMOL 中的 Leo Editor 開啟 mdeCourse 中的課程相關 .leo 檔案.

4. 配合課程進行, 修改課程筆記.

5. 下課之前, 以 portableGit 執行

git add .

git commit -m "commit message"

git push

但是此階段需要 .ssh 對應的 private key 資料

或許也可以利用 portableGithub 以登入的模式下, 將上述 clone 目錄中的資料, 執行 commit 與 publish 或 sync 的動作.</t>
<t tx="amd_yen.20130307204656.9867">V:\misc\leo-editor-snapshot-20130223\leo\leoeditor_doc\LeoDocs.leo#Startup</t>
<t tx="amd_yen.20130308103121.2379">2013.02

由於實際上課時, 必須配合各週次進行, 但是每幾週又會組成某一特定架構的介紹或實習, 因此 clone node 在這裡或許就可以派上用途, 例如花三週來說明 sgw 用於協同產品設計實習的群組套件搭建, 因此可以將 sgw 套件搭建流程一分為三, 並且在各週逐一完成某一特定內容的設定與實習, 而在手冊建立時, 則取三週的教學內容, 以 clone node 的方式組成 sgw 套件搭建與應用的主題.

當三週的設定與實習完成後, sgw 的設定與實習教材也能夠同步完成.

其次在上課的當下, 設法利用課程內容, 以程式建立 TCExam 相容的考題, 應該也是一項 Leo 可以發揮的地方, 由各週的上課內容中, 以特定知識或認知為考題的主軸, 然後納入 Leo 的延伸程式, 就能夠同步轉為考試題庫.

2013.03.13

重新架構 mdeCourse, 將先前的課程 github 刪除後重新在 .gitignore 中加入 _build 目錄, 讓每次所建立的 html 與 latex 檔案目錄不會送到 github.

假如配合目前上課內容的規劃, blog.kmol.info 是否仍有存在的必要? 應該可以設法配合 html 目錄, 由 Leo Editor 中的按鍵功能, 啟動將最新的 html 目錄送到某一主機對應內容, 讓學員都能擷取最新的課程相關資料, 也能夠從 github clone 最新的課程內容架構.

由於整體系統採用 Python3, 部分 Sphinx extension 功能還無法使用, html 中的中文搜尋也尚未啟動 (卡在繁體中文分詞的使用, 目前並沒有很好的方案).

PortableKMOL 能否再精簡?以配合導入 Leo Editor 之後的上課模式?

基本的架構:

Local - portableKMOL + local github clone

Remote - github repositories + OpenShift 上的 CMSimple XH

WordPress - 群組網誌

Simple Groupware - 專案管理系統

2013.03.18

以目前的想法, 將 Leo Editor 中的節點內容透過程式直接發布到 Wordpress 與 CMSimple 應該是最佳的做法, 雖然 Sphinx 可以將 rst 轉為 html, 但是中文內容搜尋問題較麻煩, 且採用 Javascript 擷取關鍵字庫的方式搜尋, 並沒有全文搜尋好, 因此現在傾向設法將節點內容轉為 CMSimple 的 content.htm 格式, 然後讓網際內容管理系統與 Leo Editor 中的節點同步.

另外一個考量則是將節點內容送到 Wordpress (透過 xmlrpc.php), 假如能夠在新增網誌內容同時取得遠端網誌存入資料庫的 id, 後續才能透過此對應 id 進行更新或刪除的動作.

為了讓 sphinx-build -b singlehtml 所產生的單一 html 檔案, 能夠轉為 CMSimple 的 content.htm, 必須要動用到 beautiful soup: http://www.crummy.com/software/BeautifulSoup/

產生單一 singlehtml 只要將 make.bat 中, "html" 程序中的 html 換成 singlehtml 就可以完成.

if "%1" == "html" (
    REM 若將 html 改為 singlehtml 則會建立一個單一 html 檔案
    REM %SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% _build/html
	%SPHINXBUILD% -b html %ALLSPHINXOPTS% _build/html</t>
<t tx="amd_yen.20130308210411.2383">尚未完成的內容為中文的索引與搜尋.

有關 Sphinx 中文搜尋:

由於 Sphinx 的搜尋採 Javascript 進行, 實作時必須要對中文內容進行分詞, 然後再與對應頁面進行連結, 如此就會造成許多問題, 假如在進行關鍵字分詞時, 系統未能納入特定的關鍵字, 則使用者便無法進行搜尋.

最好的方式當然是全文搜尋, 但是必須耗費較多時間, 有關這點必須再加以深入考量.

假如能夠將 Sphinx 所產生的 html 導入 CMSimple XH 的 content.htm 中, 應該就可以解決許多問題, 至於對應的 images, downloads, jscripts 與 plugins 也都必須要加以整合.</t>
<t tx="amd_yen.20130308210411.2384"></t>
<t tx="amd_yen.20130308210411.2385"></t>
<t tx="amd_yen.20130308210411.2386"></t>
<t tx="amd_yen.20130308210411.2403">@language python
import os
pos = c.find_h("KMOL Guide")[0]
c.selectPosition(pos)
c.k.simulateCommand('rst3')
&lt;&lt; html manual &gt;&gt;
&lt;&lt; pdf manual &gt;&gt;
</t>
<t tx="amd_yen.20130308210411.2404">'''
c is the commander of the outline containing the script.
g is Leo's leo.core.leoGlobals module.
p is the presently selected position, the same as c.p.
'''
d = c.scanAllDirectives(p)
# d 為 commander 由目前所在目錄進行指令設定掃描
# d 資料格式為 dictionary
''' 
實際操作下, d 為 
{'tabwidth': -4, 'lineending': None, 'language': 'python', 'encoding': None, 'pluginsList': [], 'pagewidth': 70, 'wrap': True, 'path': 'D:\\github\\mdeCourse\\2013spring', 'delims': ('#', '', '')}
'''
mandir = d.get('path') + "/document"
# 取出 d dictionary 中的 path 對應值 (也就是目前所在絕對目錄), 再加上 html, 因此 mandir 即為目前所在目錄下的 html 子目錄路徑
g.es(mandir) # 列出 html 子目錄路徑
os.chdir(mandir)  # 更換目錄到 html 子目錄
os.system('make html')  # 執行 make html
</t>
<t tx="amd_yen.20130308210411.2405"># you probably need to install several packages 
# to create pdf (e.g. jadetex)
mandir = d.get('path') + "/document"
g.es(mandir)
os.chdir(mandir)
os.system('make latex')
os.chdir('_build/latex')
# 接下來要設法將 .tex 轉為 .pdf
target_name = "KMOLdocumentation"
filename = target_name+".tex"
os.system("V:\\extensions\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
os.system("V:\\extensions\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
filename = target_name+".xdv"
os.system("V:\\extensions\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xdvipdfmx.exe -vv -E "+filename)

#
#os.system(target_name.replace(".xdv", ".pdf"))
filename = target_name+".pdf"
os.system(filename)
#os.system('../../fixup.pl &lt; Leodocumentation.tex &gt; LeoDoc.tex')
#os.system('make LeoDoc.pdf')</t>
<t tx="amd_yen.20130308210411.2406"></t>
<t tx="amd_yen.20130308221230.2437"></t>
<t tx="amd_yen.20130308221230.2457">程式語言(二)

Python docutils 相關功能的應用, 可以透過網路擷取特定文件檔案 (mark down) 與影像檔, 然後以程式方法將資料轉成 html 文件.

之後這些 mark down 格式文件還可以利用 Python 的 Sphinx 套件轉為 .tex 格式, 並且進一步再轉為 pdf 檔案.

重點:

1. 純文件檔案內容, 以 mark down 方式整理, 可以讓各組員分散建置.

2. 若需要將各組員的資料內容, 整理成為報告或論文格式, 應該要善用網路與程式方法, 比較容易整合.

3. 程式模式下的文書處理, 可以用於網際協同, 相同的資料與內容處理, 也可套用到協同機械設計流程.</t>
<t tx="amd_yen.20130308221230.2462">讓學員自行建構可攜 portableKMOL 的目的在練習網際程式框架的基本組成 (程式開發環境、內容管理系統、全球資訊網伺服器、以及各類相關工具), 學員熟悉此流程後, 可以自行修改框架並且配合需要進行各模組的改版.

1. 利用程式進行文書處理

2. 利用程式進行分析運算與設計檔案轉換

以安裝 Python33 所使用的各模組, 各舉出應用範例, 並以機械設計相關應用為考量

    Python 3.3 版與相關模組安裝:
    
    Python 3.3 本體
    
    http://www.python.org/download/
    
    安裝後 C:\Python33 約佔 33 MB
    
    distribute (Python 的 module  installer, 可利用 easy_install 安裝所需模組)
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#distribute
    
    安裝後 C:\Python33 約佔 37 MB
    
    pip (Python 的 module installer, 安裝後可利用 "pip install 模組名稱" 完成模組安裝
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip
    
    安裝後 C:\Python33 約佔 38 MB
    
    win32com (Python 與 Windows COM 物件的連結模組, 可以利用 win32com 來連結 SolidWorks, Inventor, Word, Excel 等 Windows 應用程式物件)
    
    http://sourceforge.net/projects/pywin32/files/pywin32/Build%20218/
    
    安裝後 C:\Python33 約佔 64 MB
    
    PIL (Python 的 Image library, 可以處理 2D 影像檔案)
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#pil
    
    安裝後 C:\Python33 約佔 67 MB
    
    matplotlib (Python 類似 matlab 的 plot library)
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#matplotlib
    
    安裝後 C:\Python33 約佔 91 MB
    
    numpy (Python 的 numerical library, 用於數值分析運算)
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy
    
    安裝後 C:\Python33 約佔 138 MB
    
    sympy (Python 的 Symbolic manipulation 模組, 用於符號式運算 (相對於數值分析))
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#sympy
    
    安裝後 C:\Python33 約佔 175 MB
    
    scipy (Python 的 Scientific library)
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy
    
    安裝後 C:\Python33 約佔 292 MB
    
    PyQt (Python 連結 Qt (nokia 的開源 GUI 程式庫, 更自由的對應類似版本為 Pyside) 的程式庫, 可用來開發圖形介面單機程式, 例如: Leo editor 就是採用 PyQt 開發)
    
    http://www.riverbankcomputing.com/software/pyqt/download
    
    安裝後 C:\Python33 約佔 374 MB
    
    docutils (Python 的 document utility, 可將 rst 格式檔案轉為 html)
    
    http://www.lfd.uci.edu/~gohlke/pythonlibs/#docutils
    
    安裝後 C:\Python33 約佔 383 MB
    
    Leo editor (以 Python 編寫的 outliner 與 IDE)
    
    http://www.greygreen.org/leo/
    
    安裝後 C:\Python33 約佔 401 MB
    
    以C:\Python33\Scripts\pip install sphinx
    
    安裝後 C:\Python33 約佔 413 MB

單機模式
網際模式

3. 利用程式進行協同設計

網際機械設計流程 - 以 Pyforum + brython 為範例, 可以開發 html5 網際程式
網際內容管理 - django based CMS
網際專案管理 - OpenPLM - http://wiki.openplm.org/trac/wiki/Credits
OpenERP/PLM - http://www.openerpplm.eu/</t>
<t tx="amd_yen.20130308221230.2463">自 C2 開始逐步讓學員涉入 portableKMOL 各模組的建構流程, 以便有能力自行修改內容並且依照需求改版.</t>
<t tx="amd_yen.20130308221230.2464">利用(Python)程式進行文書處理

1. 需要安裝 docutils 模組

2. 也可以利用 Sphinx 模組將 rst 檔案轉為 html 與 tex, 然後再以 MikeTeX 將 tex 轉為 pdf 檔案</t>
<t tx="amd_yen.20130308221230.2492"></t>
<t tx="amd_yen.20130308221230.3827"></t>
<t tx="amd_yen.20130309155804.1706"></t>
<t tx="amd_yen.20130312013510.1498">所謂的電子書內容, 就是 Leo 中據以產生 html 與 pdf 檔案的主要內容, 其中包含程式內容的引用.

為了要能夠維繫各內容始終只有一個版本的精神, 必須要將電子書的內容加以分割, 除了以發布的週次作為區隔外, 各週的主要文字說明與程式也是分離, 程式內容位於各課程的分週程式區, 以 literalinclude 指令導入主文.

而這些主要的文字說明, 因為內置許多 rst 的指令, 若要再同時拿來作為網誌的發布內容, 有以下考量:
    
    是採取 rst 內容經過 button 程式處理, 以分割主文加上程式的內容進行傳遞, 抑或在 rst 轉為 html 後, 同時設法產生網誌版本, 並且以自動讀取特定 local 電腦區域的帳號/密碼後才進行傳遞?
    
    採 rst 轉換的方式, 工程較為浩大, 而 rst 轉 html 後, 則必須同時介入 Sphinx 轉換 html 的流程, 可以採 extension 的導入方式處理, 模式較為正統.
    
    Leo editor 一個內容, 多種用途 (view) 的特性, 在這個範例處理流程中, 將可充分展現.
    
    假如能夠使用 make.bat 中的 make wordpress, 過程中除了將 rst 轉換成 wordpress 的特定格式內容外, 並且會讀取相關發布的帳號密碼, 並且自動完成內容的發布, 應該是最佳處理方案.</t>
<t tx="amd_yen.20130312013510.1501">網誌內容為 clone 特定電子書的部分內容後, 針對網誌的 html 標註加以組合, 然後透過按鈕的程式執行, 將網誌內容直接送到 blog.kmol.info.

這裡有幾個重要必須突破:

電子書的內容必須配合進行分割, 例如: 區分為主文與程式, 然後主文的分段以 &lt;img src="/n/1.png"&gt;&lt;/img&gt; 為開頭, 並且依序進行增量.

&lt;!-- more --&gt; 的置入

&lt;pre&gt;&lt;/pre&gt; 程式碼的置入

[password-protect] [/password-protect] 的置入

若以 button 的指令送出網誌內容, 則連結網誌的管理者密碼該如何進行保全: 不放入 leo 但是卻能讓 button 程式讀取. (或可採用 minibuffer 區域的密碼讀取)</t>
<t tx="amd_yen.20130312013510.1824">#coding: utf-8

# 導入 os 模組
import os
'''
以下經由 urllib 向網路 URL 取得文件內容
'''
# 導入 urllib.request
import urllib.request
# 導入用來處理 rst2html 的 publish_string
from docutils.core import publish_string

# 可以取得目前所在節點與其下屬節點的內容
# 從目前所在節點位置找出節點所屬的課程名稱
mylist = []
for parent in p.self_and_parents_iter():
    mylist.append(parent.h)
# 倒數第 2 個就是課程名稱
課程名稱 = mylist[-2]
g.es("將要上傳的課程名稱:"+課程名稱)
g.es()
網誌內容 = ""
for p in p.self_and_subtree():
    # p.b 為目前所在節點的內文 (body text)
    網誌內容 += p.b
    #g.es(p.b)
'''
g.es("課程內容如下:")
g.es()
g.es(網誌內容)
'''
''' 因為 Leo 中的 rst 節點都是採用 Sphinx 語法與延伸程式, 因此無法僅透過 docutils 將 rst 節點內容轉為 html, 而必須設法利用 Sphinx 處理
'''
# 利用 docutils.core 模組中的 publish_string() 方法, 將 rst 內容轉為 html
超文件內容 = publish_string(
        source=網誌內容,
        writer_name='html',
        settings = None,
        settings_overrides={'output_encoding': 'unicode'}
    )
g.es(超文件內容)</t>
<t tx="amd_yen.20130314194325.1514">@language python
# 此一按鈕的用法為選擇節點然後按下上方的 generate-current button
# 希望能將此 button 改寫為局部產生 html 與 pdf
import os
# 位置為目前所選的節點
pos = c.p
# 將 commander 指定在目前所選的節點位置
c.selectPosition(pos)
# 針對節點位置執行 rst3 指令, 將內容轉為 rst 格式
c.k.simulateCommand('rst3')
# 接著將 rst 格式檔案轉為 html
&lt;&lt; html manual &gt;&gt;
# 將 rst 格式檔案轉為 pdf
&lt;&lt; pdf manual &gt;&gt;</t>
<t tx="amd_yen.20130314194325.1746"></t>
<t tx="amd_yen.20130317160119.1726"></t>
<t tx="amd_yen.20130318140025.2832"></t>
<t tx="amd_yen.20130318140025.2833">機械設計工程師所需要的程式語言

機械設計是一個資訊密集的遞廻流程:

    資訊密集 - 機械設計所做的每一個決策都會產生資料, 這些資料包括用來定義產品的規格, 以及訂定此規格的環境與緣由.
    
        產品規格 (specifications) - 包括產品性能、零組件尺寸、零組件材料、零組件加工流程、替代零組件等.
        訂定規格的環境 (environment) - 包括假設條件 (conditions and models)、如何 (how) 完成性能評估、如何取得優勢 (專利)、如何進行協同、如何管理等 (where, who, when, what).
        訂定規格的緣由 (reasons) - 包括產生各項資訊的前因與後果 (why).
    
    遞廻流程 - 重複因應問題、變更設計、期在產品生命週期流程中求取產品價值最大化.
    
因此程式語言就機械設計工程師運用電腦執行上述工作項目時, 期採最具效率的方式進行:
    
    以電腦管理資訊 - 文書處理、建立網站、登錄日誌
    以電腦評估規格 - 數值運算 (numerical)、科學運算 (science)、建立模型、執行工程設計分析
    以電腦建構環境 - 單機程式、網際程式、協同專案環境
    以電腦因應問題 - on demand 處理問題、以工作流程 (審批流程) 留下決策的細節資料
    
程式語言工作項目:
    
    程式語言基本概念
    
        會否採用程式方法進行數值運算、科學運算、資料處理 (程式語言(一)) - C1_intro
        會否採用程式方法建立單機程式  (程式語言(二)) - C2_app
        會否採用程式方法建立網際程式  (程式語言(一)) - C1_web
        
    會否採用程式方法進行文書處理 (程式語言(二)) - C2_leo
    會否採用程式方法建立網站、登錄日誌  (程式語言(一)) - C1_cms
    會否採用程式方法搭建協同專案環境 (程式語言(二)) - C2_web, C2_cd

程式語言課程規劃內容

C1_intro - 基本程式語法, 程式數值運算與資料處理
C1_cms - 網際內容管理, CMSimple XH
C1_web - 網際程式框架, CherryPy

C2_leo - 文書處理, docutils, Sphinx, Leo Editor, MikTeX
C2_app - 應用程式, PyQt
C2_web - 網際程式框架, CherryPy
C2_cd - 網際協同, c9.io, Simple Groupware</t>
<t tx="amd_yen.20130325133433.2805">以下示範如何在 KMOL Guide 的架構下, 新增一個節點用來產生第二本協同手冊

一本協同手冊的建立總共有三個部分

- 按鈕

用來執行 make html 與 make latex 以及最後的 xelatex 指令, 可以產生 html 與 pdf 格式的報告內容

按鈕的內容如下:

.. code-block:: python

    @language python
    import os
    pos = c.find_h("c2g1 report")[0]
    c.selectPosition(pos)
    c.k.simulateCommand('rst3')
    &lt;&lt; html manual &gt;&gt;
    &lt;&lt; pdf manual &gt;&gt;

必須要在 c.find_h() 中填入所要處理報告的標題, 這裡的範例標題為 c2g1 report, html 部分則需要修改 mandir = d.get('path') + "/c2g1", 指定處理目錄為 c2g1, pdf 部分除了指定文件原始目錄為 c2g1 外, 還需要告知 target_name = "index", 此一設定必須與 conf.py 中的 master_doc = 'index' 彼此對應.

- 設定檔案

共有三個, 包括 conf.py, toc 與 make.bat, conf.py 為 sphinx 的設定檔案, toc 則指定要加入哪些章節檔案, make.bat 則是實際執行 sphinx 指令的批次檔案.

conf.py 中重要的設定為:

_exts = "../exts"
extensions.append('chinese_search')
source_suffix = '.html.txt'
master_doc = 'index'
latex_documents = [
  ('index', 'index.tex', 'C2G1 使用者手冊',
   'Chiaming Yen', 'manual'),]

- 報告內容

報告內容分為兩類, 一類為單機上的資料, 以 @rst 節點導入後, 可以自動依照 Leo 節點從屬關係產生標題與內文, 第二類的報告內容則為由外部送入的檔案, 可以利用 @auto 節點指令將這些內容加入, 各外部檔案的名稱必須在 index.html.txt 中宣告.</t>
<t tx="amd_yen.20130325133433.2806"></t>
<t tx="amd_yen.20130325133433.2807">@language python
import os
pos = c.find_h("c2g1 report")[0]
c.selectPosition(pos)
c.k.simulateCommand('rst3')
&lt;&lt; html manual &gt;&gt;
&lt;&lt; pdf manual &gt;&gt;
</t>
<t tx="amd_yen.20130325133433.2808">'''
c is the commander of the outline containing the script.
g is Leo's leo.core.leoGlobals module.
p is the presently selected position, the same as c.p.
'''
d = c.scanAllDirectives(p)
# d 為 commander 由目前所在目錄進行指令設定掃描
# d 資料格式為 dictionary
''' 
實際操作下, d 為 
{'tabwidth': -4, 'lineending': None, 'language': 'python', 'encoding': None, 'pluginsList': [], 'pagewidth': 70, 'wrap': True, 'path': 'D:\\github\\mdeCourse\\2013spring', 'delims': ('#', '', '')}
'''
mandir = d.get('path') + "/c2g1"
# 取出 d dictionary 中的 path 對應值 (也就是目前所在絕對目錄), 再加上 html, 因此 mandir 即為目前所在目錄下的 html 子目錄路徑
g.es(mandir) # 列出 html 子目錄路徑
os.chdir(mandir)  # 更換目錄到 html 子目錄
os.system('make html')  # 執行 make html
</t>
<t tx="amd_yen.20130325133433.2809"># you probably need to install several packages 
# to create pdf (e.g. jadetex)
mandir = d.get('path') + "/c2g1"
g.es(mandir)
os.chdir(mandir)
os.system('make latex')
os.chdir('_build/latex')
# 接下來要設法將 .tex 轉為 .pdf
target_name = "index"
filename = target_name+".tex"
os.system("V:\\extensions\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
os.system("V:\\extensions\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
filename = target_name+".xdv"
os.system("V:\\extensions\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xdvipdfmx.exe -vv -E "+filename)

#
#os.system(target_name.replace(".xdv", ".pdf"))
filename = target_name+".pdf"
os.system(filename)
#os.system('../../fixup.pl &lt; Leodocumentation.tex &gt; LeoDoc.tex')
#os.system('make LeoDoc.pdf')</t>
<t tx="amd_yen.20130325133433.2810"></t>
<t tx="amd_yen.20130325133433.2811"></t>
<t tx="amd_yen.20130325133433.2815"></t>
<t tx="amd_yen.20130325133433.2816">@language latex
% Generated by Sphinx.
\def\sphinxdocclass{report}
\documentclass[a4paper,10pt]{sphinxmanual}
\usepackage[utf8]{inputenc}
\DeclareUnicodeCharacter{00A0}{\nobreakspace}
\usepackage[T1]{fontenc}
\usepackage{babel}
\usepackage{times}
\usepackage[Sonny]{fncychap}
\usepackage{longtable}
\usepackage{sphinx}
\usepackage{multirow}

% \pdfpagewidth 195mm
% \pdfpageheight 271mm
% \textwidth 6.0in
% \textheight 8.8in
% \oddsidemargin -0.1in
% \evensidemargin -0.1in

\textwidth 6.8in
\oddsidemargin -0.2in
\evensidemargin -0.3in

\usepackage{pdfpages}
\usepackage[BoldFont,CJKchecksingle]{xeCJK}

    \usepackage{fancyvrb}    % for frame on Verbatim
    \usepackage{fancyhdr}
    \usepackage[T1]{fontspec}    %設定字體用

\usepackage{float}
\usepackage{ccaption}
\usepackage{pifont}
% \usepackage{fancybox}
\usepackage{fontspec,xunicode,xltxtra}

\setsansfont{Times New Roman}
\setmainfont{Times New Roman}
\setmonofont{Times New Roman}
% 新細明體
% 文鼎ＰＬ新宋
% 文鼎ＰＬ明體U20-L
% 文鼎ＰＬ报宋二GBK
\setCJKsansfont[BoldFont={新細明體},ItalicFont={新細明體}]{新細明體}
\setCJKromanfont[BoldFont={新細明體},ItalicFont={新細明體}]{新細明體}
\setCJKmainfont[BoldFont={新細明體},ItalicFont={新細明體}]{新細明體}
\setCJKmonofont[BoldFont={新細明體},ItalicFont={新細明體}]{新細明體}

    \makeatletter
    \def\verbatim@font{\rmfamily\small}    %為了讓 verbatim 註解中能夠加入中文, 採用 roman family 字體
    \makeatother

\XeTeXlinebreaklocale "zh"    %讓中文自動換行
\XeTeXlinebreakskip = 0pt plus 1pt
\renewcommand{\baselinestretch}{1.3} 
\setcounter{tocdepth}{3}
\captiontitlefont{\small\sffamily}
\captiondelim{ - }
\renewcommand\today{\number\year年\number\month月\number\day日}
\makeatletter
\renewcommand*\l@subsection{\@dottedtocline{2}{2.0em}{4.0em}}
\renewcommand*\l@subsubsection{\@dottedtocline{3}{3em}{5em}}
\makeatother
\titleformat{\chapter}[display]
{\bfseries\Huge}
{\filleft \Huge 第 \hspace{2 mm} \thechapter \hspace{4 mm} 章}
{4ex}
{\titlerule
\vspace{1ex}%
\filright}
[\vspace{1ex}%
\titlerule]
%\definecolor{VerbatimBorderColor}{rgb}{0.2,0.2,0.2}
\definecolor{VerbatimColor}{rgb}{0.95,0.95,0.95}


\title{C2G1 使用者手冊}
\date{}
\release{1.0}
\author{Chiaming Yen}
\newcommand{\sphinxlogo}{}
\renewcommand{\releasename}{釋出}
\makeindex

\makeatletter
\def\PYG@reset{\let\PYG@it=\relax \let\PYG@bf=\relax%
    \let\PYG@ul=\relax \let\PYG@tc=\relax%
    \let\PYG@bc=\relax \let\PYG@ff=\relax}
\def\PYG@tok#1{\csname PYG@tok@#1\endcsname}
\def\PYG@toks#1+{\ifx\relax#1\empty\else%
    \PYG@tok{#1}\expandafter\PYG@toks\fi}
\def\PYG@do#1{\PYG@bc{\PYG@tc{\PYG@ul{%
    \PYG@it{\PYG@bf{\PYG@ff{#1}}}}}}}
\def\PYG#1#2{\PYG@reset\PYG@toks#1+\relax+\PYG@do{#2}}

\expandafter\def\csname PYG@tok@nl\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.13,0.44}{##1}}}
\expandafter\def\csname PYG@tok@nn\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.05,0.52,0.71}{##1}}}
\expandafter\def\csname PYG@tok@no\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.38,0.68,0.84}{##1}}}
\expandafter\def\csname PYG@tok@ss\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.32,0.47,0.09}{##1}}}
\expandafter\def\csname PYG@tok@sr\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.14,0.33,0.53}{##1}}}
\expandafter\def\csname PYG@tok@nd\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.33,0.33,0.33}{##1}}}
\expandafter\def\csname PYG@tok@ne\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@nf\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.02,0.16,0.49}{##1}}}
\expandafter\def\csname PYG@tok@na\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@nb\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@nc\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.05,0.52,0.71}{##1}}}
\expandafter\def\csname PYG@tok@se\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@sd\endcsname{\let\PYG@it=\textit\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@sc\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@sb\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@c1\endcsname{\let\PYG@it=\textit\def\PYG@tc##1{\textcolor[rgb]{0.25,0.50,0.56}{##1}}}
\expandafter\def\csname PYG@tok@nt\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.02,0.16,0.45}{##1}}}
\expandafter\def\csname PYG@tok@nv\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.73,0.38,0.84}{##1}}}
\expandafter\def\csname PYG@tok@si\endcsname{\let\PYG@it=\textit\def\PYG@tc##1{\textcolor[rgb]{0.44,0.63,0.82}{##1}}}
\expandafter\def\csname PYG@tok@sh\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@s\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@w\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.73,0.73,0.73}{##1}}}
\expandafter\def\csname PYG@tok@kc\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@bp\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@mi\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.13,0.50,0.31}{##1}}}
\expandafter\def\csname PYG@tok@c\endcsname{\let\PYG@it=\textit\def\PYG@tc##1{\textcolor[rgb]{0.25,0.50,0.56}{##1}}}
\expandafter\def\csname PYG@tok@k\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@o\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.40,0.40,0.40}{##1}}}
\expandafter\def\csname PYG@tok@m\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.13,0.50,0.31}{##1}}}
\expandafter\def\csname PYG@tok@ni\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.84,0.33,0.22}{##1}}}
\expandafter\def\csname PYG@tok@vg\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.73,0.38,0.84}{##1}}}
\expandafter\def\csname PYG@tok@s2\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@s1\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.44,0.63}{##1}}}
\expandafter\def\csname PYG@tok@vc\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.73,0.38,0.84}{##1}}}
\expandafter\def\csname PYG@tok@err\endcsname{\def\PYG@bc##1{\setlength{\fboxsep}{0pt}\fcolorbox[rgb]{1.00,0.00,0.00}{1,1,1}{\strut ##1}}}
\expandafter\def\csname PYG@tok@cm\endcsname{\let\PYG@it=\textit\def\PYG@tc##1{\textcolor[rgb]{0.25,0.50,0.56}{##1}}}
\expandafter\def\csname PYG@tok@kt\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.56,0.13,0.00}{##1}}}
\expandafter\def\csname PYG@tok@kr\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@kp\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@kn\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@mf\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.13,0.50,0.31}{##1}}}
\expandafter\def\csname PYG@tok@cs\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.25,0.50,0.56}{##1}}\def\PYG@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PYG@tok@il\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.13,0.50,0.31}{##1}}}
\expandafter\def\csname PYG@tok@cp\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@mo\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.13,0.50,0.31}{##1}}}
\expandafter\def\csname PYG@tok@kd\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@ow\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PYG@tok@mh\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.13,0.50,0.31}{##1}}}
\expandafter\def\csname PYG@tok@gs\endcsname{\let\PYG@bf=\textbf}
\expandafter\def\csname PYG@tok@gr\endcsname{\def\PYG@tc##1{\textcolor[rgb]{1.00,0.00,0.00}{##1}}}
\expandafter\def\csname PYG@tok@vi\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.73,0.38,0.84}{##1}}}
\expandafter\def\csname PYG@tok@gp\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.78,0.36,0.04}{##1}}}
\expandafter\def\csname PYG@tok@gu\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.50,0.00,0.50}{##1}}}
\expandafter\def\csname PYG@tok@gt\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.00,0.27,0.87}{##1}}}
\expandafter\def\csname PYG@tok@sx\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.78,0.36,0.04}{##1}}}
\expandafter\def\csname PYG@tok@ge\endcsname{\let\PYG@it=\textit}
\expandafter\def\csname PYG@tok@gd\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.63,0.00,0.00}{##1}}}
\expandafter\def\csname PYG@tok@gi\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.00,0.63,0.00}{##1}}}
\expandafter\def\csname PYG@tok@gh\endcsname{\let\PYG@bf=\textbf\def\PYG@tc##1{\textcolor[rgb]{0.00,0.00,0.50}{##1}}}
\expandafter\def\csname PYG@tok@go\endcsname{\def\PYG@tc##1{\textcolor[rgb]{0.20,0.20,0.20}{##1}}}

\def\PYGZbs{\char`\\}
\def\PYGZus{\char`\_}
\def\PYGZob{\char`\{}
\def\PYGZcb{\char`\}}
\def\PYGZca{\char`\^}
\def\PYGZam{\char`\&amp;}
\def\PYGZlt{\char`\&lt;}
\def\PYGZgt{\char`\&gt;}
\def\PYGZsh{\char`\#}
\def\PYGZpc{\char`\%}
\def\PYGZdl{\char`\$}
\def\PYGZhy{\char`\-}
\def\PYGZsq{\char`\'}
\def\PYGZdq{\char`\"}
\def\PYGZti{\char`\~}
% for compatibility with earlier versions
\def\PYGZat{@}
\def\PYGZlb{[}
\def\PYGZrb{]}
\makeatother

\begin{document}

\maketitle
\tableofcontents
\phantomsection\label{index::doc}


\href{http://blog.kmol.info}{KMOL's home page}


\chapter{C2G1 報告}
\label{frontmatter:c2g1}\label{frontmatter::doc}\label{frontmatter:kmol-s-users-guide}
\index{C2G1 報告}\setbox0\vbox{
\begin{minipage}{0.95\linewidth}
\textbf{Contents}

\medskip

\begin{itemize}
\item {} 
{\hyperref[frontmatter:c2g1]{C2G1 報告}}
\begin{itemize}
\item {} 
{\hyperref[frontmatter:id1]{前言}}

\item {} 
{\hyperref[frontmatter:id2]{動機}}

\end{itemize}

\end{itemize}
\end{minipage}}
\begin{center}\setlength{\fboxsep}{5pt}\shadowbox{\box0}\end{center}


\section{前言}
\label{frontmatter:id1}
這是前言內容


\section{動機}
\label{frontmatter:id2}
這是動機內容


\chapter{這是 outside 標題}
\label{fromoutside:outside}\label{fromoutside::doc}
\index{outside 標題}\setbox0\vbox{
\begin{minipage}{0.95\linewidth}
\textbf{Contents}

\medskip

\begin{itemize}
\item {} 
{\hyperref[fromoutside:outside]{這是 outside 標題}}
\begin{itemize}
\item {} 
{\hyperref[fromoutside:id1]{小標題}}

\item {} 
{\hyperref[fromoutside:id2]{小標題2}}

\end{itemize}

\end{itemize}
\end{minipage}}
\begin{center}\setlength{\fboxsep}{5pt}\shadowbox{\box0}\end{center}

以下就是 outside 的內容, 由某一位組員負責編寫

這是外部的檔案, 來自外部的內容

這是第二次從外部更新的檔案


\section{小標題}
\label{fromoutside:id1}
這是小標題之後的內容, 假如希望從網際系統取得組員的 frontouside.html.txt, 可以透過 CMSimple 的 upload 機制.


\section{小標題2}
\label{fromoutside:id2}
這是小標題2之後的內容, 經過 sphinx 處理後的 html 目錄則可以利用 mongoose 或 nginx 派送到網站上, 也可以將 html 目錄中的內容轉送到雲端網站中.

以下嘗試由 literalinclude 導入程式碼:

\begin{Verbatim}[commandchars=\\\{\}]
\# -*- coding: utf-8 -*-
\# 配合程式所使用的 @asis 會將資料存在 .leo 檔案
\# 建立虛擬的班級人員名單
import random
import string
學號碼數 = 4
姓名字數 = 3
姓氏檔案 = "lastname.txt"
名字檔案 = "firstname.txt"
學生人數 = [53, 55]
\# 讀進姓氏檔案與名字檔案
各班學生人數=random.randint(學生人數[0], 學生人數[1])
def makeNumber(學號碼數):
    return ''.join([random.choice(string.digits) for 索引 in range(學號碼數)])

開啟姓氏檔案 = open(姓氏檔案, "r", encoding="utf-8")
姓氏 = 開啟姓氏檔案.readlines()
開啟名字檔案 = open(名字檔案, "r", encoding="utf-8")
學員檔案 = open("虛設學員.txt","w",encoding='utf-8')
名字 = 開啟名字檔案.readlines()
科系碼 = makeNumber(學號碼數)
for 索引 in range(1, 各班學生人數):
    if(len(str(索引)) == 1):
        學號 = "0" + str(索引)
    else:
        學號 = str(索引)
    \# 設法製造缺號
    if random.randint(0, 100) \textgreater{} 3 :
        姓 = 姓氏[0][random.randint(0, len(姓氏[0])-1)]
        名 = 名字[0][random.randint(0, len(名字[0])-1)]
        名 += 名字[0][random.randint(0, len(名字[0])-1)]
        print("90"+科系碼+學號+" "+姓+名)
        學員檔案.write("90"+科系碼+學號+" "+姓+名+"\PYGZbs{}n")

開啟姓氏檔案.close()
開啟名字檔案.close()
學員檔案.close()

'''

以下為 lastname.txt 的內容:

趙錢孫李周吳鄭王馮陳褚衛蔣沈韓楊朱秦尤許何呂施張孔曹嚴華金魏陶薑
戚謝鄒喻柏水竇章雲蘇潘葛奚範彭郎魯韋昌馬苗鳳花方俞任袁柳酆鮑史唐
費廉岑薛雷賀倪湯滕殷羅畢郝鄔安常樂於時傅皮卞齊康伍餘元蔔顧孟平黃
和穆蕭尹姚邵湛汪祁毛禹狄米貝明臧計伏成戴談宋茅龐熊紀舒屈項祝董梁
杜阮藍閔席季麻強賈路婁危江童顏郭梅盛林刁鍾徐邱駱高夏蔡田樊胡淩霍
虞萬支柯昝管盧莫柯房裘繆幹解應宗丁宣賁鄧鬱單杭洪包諸左石崔吉鈕龔
程嵇邢滑裴陸榮翁荀羊于惠甄曲家封芮羿儲靳汲邴糜松井段富巫烏焦巴弓
牧隗山穀車侯宓蓬全郗班仰秋仲伊宮甯仇欒暴甘鈄曆戎祖武符劉景詹束龍
葉幸司韶郜黎薊溥印宿白懷蒲邰從鄂索鹹籍賴卓藺屠蒙池喬陽鬱胥能蒼雙
聞莘党翟譚貢勞逄姬申扶堵冉宰酈雍卻璩桑桂濮牛壽通邊扈燕冀浦尚農溫
別莊晏柴瞿閻充慕連茹習宦艾魚容向古易慎戈廖庾終暨居衡步都耿滿弘匡
國文寇廣祿闕東歐殳沃利蔚越夔隆師鞏厙聶晁勾敖融冷訾辛闞那簡饒空曾
毋沙乜養鞠須豐巢關蒯相查後荊紅

以下為 firstname.txt 的內容:

平燦惠歡佩泰州江揚剛乃屏珊易吟定小其菱幼函琴青博兆菁重立呈然永奕
漢義萍皓力昌妍合仲佳虹慧蓮恭石展軒啟奇秀駿晉冰政綸丹邦大冠貞生思
玄威嘉依音雲英能緯彬妙聖協法瑞恆采心友昀花樺航玫宛順儀寶婷書妮胤
彥修火雨俞孝蕙允城盈家陽琳阿紹誠倫亨星美和予念鳳凱松幸凡雯士達泓
金瑜勇必珍芷岳鈺方琬成霞麟致哲台睿賢珠瑩南克為尹妤春怡亮伯喬夫昕
亞真喜初愛清禮斌吉淳百臻寧以筠諭仕子文雅郁柏秋蓉伸福劭木宗傑丞昭
芝弘宇明月峰東聿登左祥迪蘭佑甫雄俊之卉谷玲禾茹榮堯芬姍少謙琇禎蘋
年姵勳任信旭燕苓豐惟盛發齊介芳容于維侑舜洋璇茂芃伊玉海建季雪柔汝
千富男新昱人添群欣綠馨利宜堅意名右姿智韻典竹巧坤可全潔裕毓孜仁韋
慈志琦宣希云茜辛薇梅樂妏嬌安上仰長承旺珮良鑫桓瑋光貴茵憲品綺芸天
源娟輝君銘夙來昇如泉正廷峻瑤恬靖淑瑄行秉伶康水羽治妹宥夢映霖儒枝
沛香皇一龍興延翰山卿白忠恩亭俐孟均元凌又偉強育辰萱鴻宸亦娥振中紫
倩民隆善玟紋杰旻學若華豪湖帆恒佐桂蓁穎軍德財庭琪世林純岑原尚昆妃
宏
'''
\end{Verbatim}

\href{http://blog.kmol.info}{KMOL's home page}



\renewcommand{\indexname}{索引}
\printindex
\end{document}
</t>
<t tx="amd_yen.20130325133433.2817">@language python

'''
主要用來細部修改 tex 檔案後, 再次產生所需要的 pdf 檔案
'''
</t>
<t tx="amd_yen.20130325133433.2818"></t>
<t tx="amd_yen.20130325133433.2819">@language rest
@tabwidth -4

@ @rst-options
call_docutils=False
code_mode=False
generate_rst=True
http_server_support = False
show_organizer_nodes=True
show_headlines=True
show_leo_directives=True
stylesheet_path=..\doc
write_intermediate_file = True
verbose=True
@c
</t>
<t tx="amd_yen.20130325133433.2820">################################################
C2G1 報告
################################################

.. index:: C2G1 報告

.. contents::
    :depth: 3</t>
<t tx="amd_yen.20130325133433.2821">這是前言內容</t>
<t tx="amd_yen.20130325133433.2822">這是動機內容</t>
</tnodes>
</leo_file>
